{
  "version": 3,
  "sources": ["../../@melloware/coloris/dist/esm/coloris.js"],
  "sourcesContent": ["var Coloris = function () {\n  /*!\r\n  * Copyright (c) 2021-2023 Momo Bassit.\r\n  * Licensed under the MIT License (MIT)\r\n  * https://github.com/mdbassit/Coloris\r\n  * Version: 0.21.1\r\n  * NPM: https://github.com/melloware/coloris-npm\r\n  */\n\n  return function (window, document, Math, undefined) {\n    var ctx = document.createElement('canvas').getContext('2d');\n    var currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n    var container,picker,colorArea,colorMarker,colorPreview,colorValue,clearButton,closeButton,\n      hueSlider,hueMarker,alphaSlider,alphaMarker,currentEl,currentFormat,oldColor,keyboardNav,\n      colorAreaDims = {};\n\n    // Default settings\n    var settings = {\n      el: '[data-coloris]',\n      parent: 'body',\n      theme: 'default',\n      themeMode: 'light',\n      rtl: false,\n      wrap: true,\n      margin: 2,\n      format: 'hex',\n      formatToggle: false,\n      swatches: [],\n      swatchesOnly: false,\n      alpha: true,\n      forceAlpha: false,\n      focusInput: true,\n      selectInput: false,\n      inline: false,\n      defaultColor: '#000000',\n      clearButton: false,\n      clearLabel: 'Clear',\n      closeButton: false,\n      closeLabel: 'Close',\n      onChange: function onChange() {return undefined;},\n      a11y: {\n        open: 'Open color picker',\n        close: 'Close color picker',\n        clear: 'Clear the selected color',\n        marker: 'Saturation: {s}. Brightness: {v}.',\n        hueSlider: 'Hue slider',\n        alphaSlider: 'Opacity slider',\n        input: 'Color value field',\n        format: 'Color format',\n        swatch: 'Color swatch',\n        instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.'\n      }\n    };\n\n    // Virtual instances cache\n    var instances = {};\n    var currentInstanceId = '';\n    var defaultInstance = {};\n    var hasInstance = false;\n\n    /**\r\n     * Configure the color picker.\r\n     * @param {object} options Configuration options.\r\n     */\n    function configure(options) {\n      if (typeof options !== 'object') {\n        return;\n      }var _loop = function _loop()\n\n      {\n        switch (key) {\n          case 'el':\n            bindFields(options.el);\n            if (options.wrap !== false) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'parent':\n            container = document.querySelector(options.parent);\n            if (container) {\n              container.appendChild(picker);\n              settings.parent = options.parent;\n\n              // document.body is special\n              if (container === document.body) {\n                container = undefined;\n              }\n            }\n            break;\n          case 'themeMode':\n            settings.themeMode = options.themeMode;\n            if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n              settings.themeMode = 'dark';\n            }\n          // The lack of a break statement is intentional\n          case 'theme':\n            if (options.theme) {\n              settings.theme = options.theme;\n            }\n\n            // Set the theme and color scheme\n            picker.className = \"clr-picker clr-\" + settings.theme + \" clr-\" + settings.themeMode;\n\n            // Update the color picker's position if inline mode is in use\n            if (settings.inline) {\n              updatePickerPosition();\n            }\n            break;\n          case 'rtl':\n            settings.rtl = !!options.rtl;\n            document.querySelectorAll('.clr-field').forEach(function (field) {return field.classList.toggle('clr-rtl', settings.rtl);});\n            break;\n          case 'margin':\n            options.margin *= 1;\n            settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n            break;\n          case 'wrap':\n            if (options.el && options.wrap) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'formatToggle':\n            settings.formatToggle = !!options.formatToggle;\n            getEl('clr-format').style.display = settings.formatToggle ? 'block' : 'none';\n            if (settings.formatToggle) {\n              settings.format = 'auto';\n            }\n            break;\n          case 'swatches':\n            if (Array.isArray(options.swatches)) {\n              var swatches = [];\n\n              options.swatches.forEach(function (swatch, i) {\n                swatches.push(\"<button type=\\\"button\\\" id=\\\"clr-swatch-\" + i + \"\\\" aria-labelledby=\\\"clr-swatch-label clr-swatch-\" + i + \"\\\" style=\\\"color: \" + swatch + \";\\\">\" + swatch + \"</button>\");\n              });\n\n              getEl('clr-swatches').innerHTML = swatches.length ? \"<div>\" + swatches.join('') + \"</div>\" : '';\n              settings.swatches = options.swatches.slice();\n            }\n            break;\n          case 'swatchesOnly':\n            settings.swatchesOnly = !!options.swatchesOnly;\n            picker.setAttribute('data-minimal', settings.swatchesOnly);\n            break;\n          case 'alpha':\n            settings.alpha = !!options.alpha;\n            picker.setAttribute('data-alpha', settings.alpha);\n            break;\n          case 'inline':\n            settings.inline = !!options.inline;\n            picker.setAttribute('data-inline', settings.inline);\n\n            if (settings.inline) {\n              var defaultColor = options.defaultColor || settings.defaultColor;\n\n              currentFormat = getColorFormatFromStr(defaultColor);\n              updatePickerPosition();\n              setColorFromStr(defaultColor);\n            }\n            break;\n          case 'clearButton':\n            // Backward compatibility\n            if (typeof options.clearButton === 'object') {\n              if (options.clearButton.label) {\n                settings.clearLabel = options.clearButton.label;\n                clearButton.innerHTML = settings.clearLabel;\n              }\n\n              options.clearButton = options.clearButton.show;\n            }\n\n            settings.clearButton = !!options.clearButton;\n            clearButton.style.display = settings.clearButton ? 'block' : 'none';\n            break;\n          case 'clearLabel':\n            settings.clearLabel = options.clearLabel;\n            clearButton.innerHTML = settings.clearLabel;\n            break;\n          case 'closeButton':\n            settings.closeButton = !!options.closeButton;\n\n            if (settings.closeButton) {\n              picker.insertBefore(closeButton, colorPreview);\n            } else {\n              colorPreview.appendChild(closeButton);\n            }\n\n            break;\n          case 'closeLabel':\n            settings.closeLabel = options.closeLabel;\n            closeButton.innerHTML = settings.closeLabel;\n            break;\n          case 'a11y':\n            var labels = options.a11y;\n            var update = false;\n\n            if (typeof labels === 'object') {\n              for (var label in labels) {\n                if (labels[label] && settings.a11y[label]) {\n                  settings.a11y[label] = labels[label];\n                  update = true;\n                }\n              }\n            }\n\n            if (update) {\n              var openLabel = getEl('clr-open-label');\n              var swatchLabel = getEl('clr-swatch-label');\n\n              openLabel.innerHTML = settings.a11y.open;\n              swatchLabel.innerHTML = settings.a11y.swatch;\n              closeButton.setAttribute('aria-label', settings.a11y.close);\n              clearButton.setAttribute('aria-label', settings.a11y.clear);\n              hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n              alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n              colorValue.setAttribute('aria-label', settings.a11y.input);\n              colorArea.setAttribute('aria-label', settings.a11y.instruction);\n            }\n            break;\n          default:\n            settings[key] = options[key];\n        }\n      };for (var key in options) {_loop();}\n    }\n\n    /**\r\n     * Add or update a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     * @param {Object} options Per-instance options to apply.\r\n     */\n    function setVirtualInstance(selector, options) {\n      if (typeof selector === 'string' && typeof options === 'object') {\n        instances[selector] = options;\n        hasInstance = true;\n      }\n    }\n\n    /**\r\n     * Remove a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     */\n    function removeVirtualInstance(selector) {\n      delete instances[selector];\n\n      if (Object.keys(instances).length === 0) {\n        hasInstance = false;\n\n        if (selector === currentInstanceId) {\n          resetVirtualInstance();\n        }\n      }\n    }\n\n    /**\r\n     * Attach a virtual instance to an element if it matches a selector.\r\n     * @param {Object} element Target element that will receive a virtual instance if applicable.\r\n     */\n    function attachVirtualInstance(element) {\n      if (hasInstance) {\n        // These options can only be set globally, not per instance\n        var unsupportedOptions = ['el', 'wrap', 'rtl', 'inline', 'defaultColor', 'a11y'];var _loop2 = function _loop2()\n\n        {\n          var options = instances[selector];\n\n          // If the element matches an instance's CSS selector\n          if (element.matches(selector)) {\n            currentInstanceId = selector;\n            defaultInstance = {};\n\n            // Delete unsupported options\n            unsupportedOptions.forEach(function (option) {return delete options[option];});\n\n            // Back up the default options so we can restore them later\n            for (var option in options) {\n              defaultInstance[option] = Array.isArray(settings[option]) ? settings[option].slice() : settings[option];\n            }\n\n            // Set the instance's options\n            configure(options);return \"break\";\n\n          }\n        };for (var selector in instances) {var _ret = _loop2();if (_ret === \"break\") break;}\n      }\n    }\n\n    /**\r\n     * Revert any per-instance options that were previously applied.\r\n     */\n    function resetVirtualInstance() {\n      if (Object.keys(defaultInstance).length > 0) {\n        configure(defaultInstance);\n        currentInstanceId = '';\n        defaultInstance = {};\n      }\n    }\n\n    /**\r\n     * Bind the color picker to input fields that match the selector.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function bindFields(selector) {\n      // Show the color picker on click on the input fields that match the selector\n      addListener(document, 'click', selector, function (event) {\n        // Skip if inline mode is in use\n        if (settings.inline) {\n          return;\n        }\n\n        // Apply any per-instance options first\n        attachVirtualInstance(event.target);\n\n        currentEl = event.target;\n        oldColor = currentEl.value;\n        currentFormat = getColorFormatFromStr(oldColor);\n        picker.classList.add('clr-open');\n\n        updatePickerPosition();\n        setColorFromStr(oldColor);\n\n        if (settings.focusInput || settings.selectInput) {\n          colorValue.focus({ preventScroll: true });\n          colorValue.setSelectionRange(currentEl.selectionStart, currentEl.selectionEnd);\n        }\n\n        if (settings.selectInput) {\n          colorValue.select();\n        }\n\n        // Always focus the first element when using keyboard navigation\n        if (keyboardNav || settings.swatchesOnly) {\n          getFocusableElements().shift().focus();\n        }\n\n        // Trigger an \"open\" event\n        currentEl.dispatchEvent(new Event('open', { bubbles: true }));\n      });\n\n      // Update the color preview of the input fields that match the selector\n      addListener(document, 'input', selector, function (event) {\n        var parent = event.target.parentNode;\n\n        // Only update the preview if the field has been previously wrapped\n        if (parent.classList.contains('clr-field')) {\n          parent.style.color = event.target.value;\n        }\n      });\n    }\n\n    /**\r\n     * Update the color picker's position and the color gradient's offset\r\n     */\n    function updatePickerPosition() {\n      if (!picker || !currentEl && !settings.inline) return; //** DO NOT REMOVE: in case called before initialized\n      var parent = container;\n      var scrollY = window.scrollY;\n      var pickerWidth = picker.offsetWidth;\n      var pickerHeight = picker.offsetHeight;\n      var reposition = { left: false, top: false };\n      var parentStyle, parentMarginTop, parentBorderTop;\n      var offset = { x: 0, y: 0 };\n\n      if (parent) {\n        parentStyle = window.getComputedStyle(parent);\n        parentMarginTop = parseFloat(parentStyle.marginTop);\n        parentBorderTop = parseFloat(parentStyle.borderTopWidth);\n\n        offset = parent.getBoundingClientRect();\n        offset.y += parentBorderTop + scrollY;\n      }\n\n      if (!settings.inline) {\n        var coords = currentEl.getBoundingClientRect();\n        var left = coords.x;\n        var top = scrollY + coords.y + coords.height + settings.margin;\n\n        // If the color picker is inside a custom container\n        // set the position relative to it\n        if (parent) {\n          left -= offset.x;\n          top -= offset.y;\n\n          if (left + pickerWidth > parent.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight > parent.clientHeight - parentMarginTop) {\n            if (pickerHeight + settings.margin <= coords.top - (offset.y - scrollY)) {\n              top -= coords.height + pickerHeight + settings.margin * 2;\n              reposition.top = true;\n            }\n          }\n\n          top += parent.scrollTop;\n\n          // Otherwise set the position relative to the whole document\n        } else {\n          if (left + pickerWidth > document.documentElement.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n            if (pickerHeight + settings.margin <= coords.top) {\n              top = scrollY + coords.y - pickerHeight - settings.margin;\n              reposition.top = true;\n            }\n          }\n        }\n\n        picker.classList.toggle('clr-left', reposition.left);\n        picker.classList.toggle('clr-top', reposition.top);\n        picker.style.left = left + \"px\";\n        picker.style.top = top + \"px\";\n        offset.x += picker.offsetLeft;\n        offset.y += picker.offsetTop;\n      }\n\n      colorAreaDims = {\n        width: colorArea.offsetWidth,\n        height: colorArea.offsetHeight,\n        x: colorArea.offsetLeft + offset.x,\n        y: colorArea.offsetTop + offset.y\n      };\n    }\n\n    /**\r\n     * Wrap the linked input fields in a div that adds a color preview.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function wrapFields(selector) {\n      document.querySelectorAll(selector).forEach(function (field) {\n        var parentNode = field.parentNode;\n\n        if (!parentNode.classList.contains('clr-field')) {\n          var wrapper = document.createElement('div');\n          var classes = 'clr-field';\n\n          if (settings.rtl || field.classList.contains('clr-rtl')) {\n            classes += ' clr-rtl';\n          }\n\n          wrapper.innerHTML = \"<button type=\\\"button\\\" aria-labelledby=\\\"clr-open-label\\\"></button>\";\n          parentNode.insertBefore(wrapper, field);\n          wrapper.setAttribute('class', classes);\n          wrapper.style.color = field.value;\n          wrapper.appendChild(field);\n        }\n      });\n    }\n\n    /**\r\n     * Close the color picker.\r\n     * @param {boolean} [revert] If true, revert the color to the original value.\r\n     */\n    function closePicker(revert) {\n      if (currentEl && !settings.inline) {\n        var prevEl = currentEl;\n\n        // Revert the color to the original value if needed\n        if (revert) {\n          // This will prevent the \"change\" event on the colorValue input to execute its handler\n          currentEl = undefined;\n\n          if (oldColor !== prevEl.value) {\n            prevEl.value = oldColor;\n\n            // Trigger an \"input\" event to force update the thumbnail next to the input field\n            prevEl.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }\n\n        // Trigger a \"change\" event if needed\n        setTimeout(function () {// Add this to the end of the event loop\n          if (oldColor !== prevEl.value) {\n            prevEl.dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        });\n\n        // Hide the picker dialog\n        picker.classList.remove('clr-open');\n\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Trigger a \"close\" event\n        prevEl.dispatchEvent(new Event('close', { bubbles: true }));\n\n        if (settings.focusInput) {\n          prevEl.focus({ preventScroll: true });\n        }\n\n        // This essentially marks the picker as closed\n        currentEl = undefined;\n      }\n    }\n\n    /**\r\n     * Set the active color from a string.\r\n     * @param {string} str String representing a color.\r\n     */\n    function setColorFromStr(str) {\n      var rgba = strToRGBA(str);\n      var hsva = RGBAtoHSVA(rgba);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n\n      // Update the UI\n      hueSlider.value = hsva.h;\n      picker.style.color = \"hsl(\" + hsva.h + \", 100%, 50%)\";\n      hueMarker.style.left = hsva.h / 360 * 100 + \"%\";\n\n      colorMarker.style.left = colorAreaDims.width * hsva.s / 100 + \"px\";\n      colorMarker.style.top = colorAreaDims.height - colorAreaDims.height * hsva.v / 100 + \"px\";\n\n      alphaSlider.value = hsva.a * 100;\n      alphaMarker.style.left = hsva.a * 100 + \"%\";\n    }\n\n    /**\r\n     * Guess the color format from a string.\r\n     * @param {string} str String representing a color.\r\n     * @return {string} The color format.\r\n     */\n    function getColorFormatFromStr(str) {\n      var format = str.substring(0, 3).toLowerCase();\n\n      if (format === 'rgb' || format === 'hsl') {\n        return format;\n      }\n\n      return 'hex';\n    }\n\n    /**\r\n     * Copy the active color to the linked input field.\r\n     * @param {number} [color] Color value to override the active color.\r\n     */\n    function pickColor(color) {\n      color = color !== undefined ? color : colorValue.value;\n\n      if (currentEl) {\n        currentEl.value = color;\n        currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n      }\n\n      if (settings.onChange) {\n        settings.onChange.call(window, color, currentEl);\n      }\n\n      document.dispatchEvent(new CustomEvent('coloris:pick', { detail: { color: color, currentEl: currentEl } }));\n    }\n\n    /**\r\n     * Set the active color based on a specific point in the color gradient.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setColorAtPosition(x, y) {\n      var hsva = {\n        h: hueSlider.value * 1,\n        s: x / colorAreaDims.width * 100,\n        v: 100 - y / colorAreaDims.height * 100,\n        a: alphaSlider.value / 100\n      };\n      var rgba = HSVAtoRGBA(hsva);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n      pickColor();\n    }\n\n    /**\r\n     * Update the color marker's accessibility label.\r\n     * @param {number} saturation\r\n     * @param {number} value\r\n     */\n    function updateMarkerA11yLabel(saturation, value) {\n      var label = settings.a11y.marker;\n\n      saturation = saturation.toFixed(1) * 1;\n      value = value.toFixed(1) * 1;\n      label = label.replace('{s}', saturation);\n      label = label.replace('{v}', value);\n      colorMarker.setAttribute('aria-label', label);\n    }\n\n    //\n    /**\r\n     * Get the pageX and pageY positions of the pointer.\r\n     * @param {object} event The MouseEvent or TouchEvent object.\r\n     * @return {object} The pageX and pageY positions.\r\n     */\n    function getPointerPosition(event) {\n      return {\n        pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n        pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY\n      };\n    }\n\n    /**\r\n     * Move the color marker when dragged.\r\n     * @param {object} event The MouseEvent object.\r\n     */\n    function moveMarker(event) {\n      var pointer = getPointerPosition(event);\n      var x = pointer.pageX - colorAreaDims.x;\n      var y = pointer.pageY - colorAreaDims.y;\n\n      if (container) {\n        y += container.scrollTop;\n      }\n\n      setMarkerPosition(x, y);\n\n      // Prevent scrolling while dragging the marker\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    /**\r\n     * Move the color marker when the arrow keys are pressed.\r\n     * @param {number} offsetX The horizontal amount to move.\r\n     * @param {number} offsetY The vertical amount to move.\r\n     */\n    function moveMarkerOnKeydown(offsetX, offsetY) {\n      var x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n      var y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n      setMarkerPosition(x, y);\n    }\n\n    /**\r\n     * Set the color marker's position.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setMarkerPosition(x, y) {\n      // Make sure the marker doesn't go out of bounds\n      x = x < 0 ? 0 : x > colorAreaDims.width ? colorAreaDims.width : x;\n      y = y < 0 ? 0 : y > colorAreaDims.height ? colorAreaDims.height : y;\n\n      // Set the position\n      colorMarker.style.left = x + \"px\";\n      colorMarker.style.top = y + \"px\";\n\n      // Update the color\n      setColorAtPosition(x, y);\n\n      // Make sure the marker is focused\n      colorMarker.focus();\n    }\n\n    /**\r\n     * Update the color picker's input field and preview thumb.\r\n     * @param {Object} rgba Red, green, blue and alpha values.\r\n     * @param {Object} [hsva] Hue, saturation, value and alpha values.\r\n     */\n    function updateColor(rgba, hsva) {if (rgba === void 0) {rgba = {};}if (hsva === void 0) {hsva = {};}\n      var format = settings.format;\n\n      for (var key in rgba) {\n        currentColor[key] = rgba[key];\n      }\n\n      for (var _key in hsva) {\n        currentColor[_key] = hsva[_key];\n      }\n\n      var hex = RGBAToHex(currentColor);\n      var opaqueHex = hex.substring(0, 7);\n\n      colorMarker.style.color = opaqueHex;\n      alphaMarker.parentNode.style.color = opaqueHex;\n      alphaMarker.style.color = hex;\n      colorPreview.style.color = hex;\n\n      // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n      colorArea.style.display = 'none';\n      colorArea.offsetHeight;\n      colorArea.style.display = '';\n      alphaMarker.nextElementSibling.style.display = 'none';\n      alphaMarker.nextElementSibling.offsetHeight;\n      alphaMarker.nextElementSibling.style.display = '';\n\n      if (format === 'mixed') {\n        format = currentColor.a === 1 ? 'hex' : 'rgb';\n      } else if (format === 'auto') {\n        format = currentFormat;\n      }\n\n      switch (format) {\n        case 'hex':\n          colorValue.value = hex;\n          break;\n        case 'rgb':\n          colorValue.value = RGBAToStr(currentColor);\n          break;\n        case 'hsl':\n          colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n          break;\n      }\n\n      // Select the current format in the format switcher\n      document.querySelector(\".clr-format [value=\\\"\" + format + \"\\\"]\").checked = true;\n    }\n\n    /**\r\n     * Set the hue when its slider is moved.\r\n     */\n    function setHue() {\n      var hue = hueSlider.value * 1;\n      var x = colorMarker.style.left.replace('px', '') * 1;\n      var y = colorMarker.style.top.replace('px', '') * 1;\n\n      picker.style.color = \"hsl(\" + hue + \", 100%, 50%)\";\n      hueMarker.style.left = hue / 360 * 100 + \"%\";\n\n      setColorAtPosition(x, y);\n    }\n\n    /**\r\n     * Set the alpha when its slider is moved.\r\n     */\n    function setAlpha() {\n      var alpha = alphaSlider.value / 100;\n\n      alphaMarker.style.left = alpha * 100 + \"%\";\n      updateColor({ a: alpha });\n      pickColor();\n    }\n\n    /**\r\n     * Convert HSVA to RGBA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function HSVAtoRGBA(hsva) {\n      var saturation = hsva.s / 100;\n      var value = hsva.v / 100;\n      var chroma = saturation * value;\n      var hueBy60 = hsva.h / 60;\n      var x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n      var m = value - chroma;\n\n      chroma = chroma + m;\n      x = x + m;\n\n      var index = Math.floor(hueBy60) % 6;\n      var red = [chroma, x, m, m, x, chroma][index];\n      var green = [x, chroma, chroma, x, m, m][index];\n      var blue = [m, m, x, chroma, chroma, x][index];\n\n      return {\n        r: Math.round(red * 255),\n        g: Math.round(green * 255),\n        b: Math.round(blue * 255),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert HSVA to HSLA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Hue, saturation, lightness and alpha values.\r\n     */\n    function HSVAtoHSLA(hsva) {\n      var value = hsva.v / 100;\n      var lightness = value * (1 - hsva.s / 100 / 2);\n      var saturation;\n\n      if (lightness > 0 && lightness < 1) {\n        saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n      }\n\n      return {\n        h: hsva.h,\n        s: saturation || 0,\n        l: Math.round(lightness * 100),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert RGBA to HSVA.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {object} Hue, saturation, value and alpha values.\r\n     */\n    function RGBAtoHSVA(rgba) {\n      var red = rgba.r / 255;\n      var green = rgba.g / 255;\n      var blue = rgba.b / 255;\n      var xmax = Math.max(red, green, blue);\n      var xmin = Math.min(red, green, blue);\n      var chroma = xmax - xmin;\n      var value = xmax;\n      var hue = 0;\n      var saturation = 0;\n\n      if (chroma) {\n        if (xmax === red) {hue = (green - blue) / chroma;}\n        if (xmax === green) {hue = 2 + (blue - red) / chroma;}\n        if (xmax === blue) {hue = 4 + (red - green) / chroma;}\n        if (xmax) {saturation = chroma / xmax;}\n      }\n\n      hue = Math.floor(hue * 60);\n\n      return {\n        h: hue < 0 ? hue + 360 : hue,\n        s: Math.round(saturation * 100),\n        v: Math.round(value * 100),\n        a: rgba.a\n      };\n    }\n\n    /**\r\n     * Parse a string to RGBA.\r\n     * @param {string} str String representing a color.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function strToRGBA(str) {\n      var regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n      var match, rgba;\n\n      // Default to black for invalid color strings\n      ctx.fillStyle = '#000';\n\n      // Use canvas to convert the string to a valid color string\n      ctx.fillStyle = str;\n      match = regex.exec(ctx.fillStyle);\n\n      if (match) {\n        rgba = {\n          r: match[3] * 1,\n          g: match[4] * 1,\n          b: match[5] * 1,\n          a: match[6] * 1\n        };\n\n        // Workaround to mitigate a Chromium bug where the alpha value is rounded incorrectly\n        rgba.a = +rgba.a.toFixed(2);\n\n      } else {\n        match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map(function (h) {return parseInt(h, 16);});\n        rgba = {\n          r: match[0],\n          g: match[1],\n          b: match[2],\n          a: 1\n        };\n      }\n\n      return rgba;\n    }\n\n    /**\r\n     * Convert RGBA to Hex.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} Hex color string.\r\n     */\n    function RGBAToHex(rgba) {\n      var R = rgba.r.toString(16);\n      var G = rgba.g.toString(16);\n      var B = rgba.b.toString(16);\n      var A = '';\n\n      if (rgba.r < 16) {\n        R = '0' + R;\n      }\n\n      if (rgba.g < 16) {\n        G = '0' + G;\n      }\n\n      if (rgba.b < 16) {\n        B = '0' + B;\n      }\n\n      if (settings.alpha && (rgba.a < 1 || settings.forceAlpha)) {\n        var alpha = rgba.a * 255 | 0;\n        A = alpha.toString(16);\n\n        if (alpha < 16) {\n          A = '0' + A;\n        }\n      }\n\n      return '#' + R + G + B + A;\n    }\n\n    /**\r\n     * Convert RGBA values to a CSS rgb/rgba string.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function RGBAToStr(rgba) {\n      if (!settings.alpha || rgba.a === 1 && !settings.forceAlpha) {\n        return \"rgb(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \")\";\n      } else {\n        return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n      }\n    }\n\n    /**\r\n     * Convert HSLA values to a CSS hsl/hsla string.\r\n     * @param {object} hsla Hue, saturation, lightness and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function HSLAToStr(hsla) {\n      if (!settings.alpha || hsla.a === 1 && !settings.forceAlpha) {\n        return \"hsl(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%)\";\n      } else {\n        return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n      }\n    }\n\n    /**\r\n     * Init the color picker.\r\n     */\n    function init() {\n      if (document.getElementById('clr-picker')) return; //** DO NOT REMOVE: Prevent binding events multiple times\n      // Render the UI\n      container = undefined;\n      picker = document.createElement('div');\n      picker.setAttribute('id', 'clr-picker');\n      picker.className = 'clr-picker';\n      picker.innerHTML =\n      \"<input id=\\\"clr-color-value\\\" name=\\\"clr-color-value\\\" class=\\\"clr-color\\\" type=\\\"text\\\" value=\\\"\\\" spellcheck=\\\"false\\\" aria-label=\\\"\" + settings.a11y.input + \"\\\">\" + (\"<div id=\\\"clr-color-area\\\" class=\\\"clr-gradient\\\" role=\\\"application\\\" aria-label=\\\"\" +\n      settings.a11y.instruction + \"\\\">\") +\n      '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>' +\n      '</div>' +\n      '<div class=\"clr-hue\">' + (\"<input id=\\\"clr-hue-slider\\\" name=\\\"clr-hue-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.hueSlider + \"\\\">\") +\n      '<div id=\"clr-hue-marker\"></div>' +\n      '</div>' +\n      '<div class=\"clr-alpha\">' + (\"<input id=\\\"clr-alpha-slider\\\" name=\\\"clr-alpha-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.alphaSlider + \"\\\">\") +\n      '<div id=\"clr-alpha-marker\"></div>' +\n      '<span></span>' +\n      '</div>' +\n      '<div id=\"clr-format\" class=\"clr-format\">' +\n      '<fieldset class=\"clr-segmented\">' + (\"<legend>\" +\n      settings.a11y.format + \"</legend>\") +\n      '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">' +\n      '<label for=\"clr-f1\">Hex</label>' +\n      '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">' +\n      '<label for=\"clr-f2\">RGB</label>' +\n      '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">' +\n      '<label for=\"clr-f3\">HSL</label>' +\n      '<span></span>' +\n      '</fieldset>' +\n      '</div>' +\n      '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>' + (\"<button type=\\\"button\\\" id=\\\"clr-clear\\\" class=\\\"clr-clear\\\" aria-label=\\\"\" +\n      settings.a11y.clear + \"\\\">\" + settings.clearLabel + \"</button>\") +\n      '<div id=\"clr-color-preview\" class=\"clr-preview\">' + (\"<button type=\\\"button\\\" id=\\\"clr-close\\\" class=\\\"clr-close\\\" aria-label=\\\"\" +\n      settings.a11y.close + \"\\\">\" + settings.closeLabel + \"</button>\") +\n      '</div>' + (\"<span id=\\\"clr-open-label\\\" hidden>\" +\n      settings.a11y.open + \"</span>\") + (\"<span id=\\\"clr-swatch-label\\\" hidden>\" +\n      settings.a11y.swatch + \"</span>\");\n\n      // Append the color picker to the DOM\n      document.body.appendChild(picker);\n\n      // Reference the UI elements\n      colorArea = getEl('clr-color-area');\n      colorMarker = getEl('clr-color-marker');\n      clearButton = getEl('clr-clear');\n      closeButton = getEl('clr-close');\n      colorPreview = getEl('clr-color-preview');\n      colorValue = getEl('clr-color-value');\n      hueSlider = getEl('clr-hue-slider');\n      hueMarker = getEl('clr-hue-marker');\n      alphaSlider = getEl('clr-alpha-slider');\n      alphaMarker = getEl('clr-alpha-marker');\n\n      // Bind the picker to the default selector\n      bindFields(settings.el);\n      wrapFields(settings.el);\n\n      addListener(picker, 'mousedown', function (event) {\n        picker.classList.remove('clr-keyboard-nav');\n        event.stopPropagation();\n      });\n\n      addListener(colorArea, 'mousedown', function (event) {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorArea, 'touchstart', function (event) {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorMarker, 'mousedown', function (event) {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorMarker, 'touchstart', function (event) {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorValue, 'change', function (event) {\n        var value = colorValue.value;\n\n        if (currentEl || settings.inline) {\n          var color = value === '' ? value : setColorFromStr(value);\n          pickColor(color);\n        }\n      });\n\n      addListener(clearButton, 'click', function (event) {\n        pickColor('');\n        closePicker();\n      });\n\n      addListener(closeButton, 'click', function (event) {\n        pickColor();\n        closePicker();\n      });\n\n      addListener(getEl('clr-format'), 'click', '.clr-format input', function (event) {\n        currentFormat = event.target.value;\n        updateColor();\n        pickColor();\n      });\n\n      addListener(picker, 'click', '.clr-swatches button', function (event) {\n        setColorFromStr(event.target.textContent);\n        pickColor();\n\n        if (settings.swatchesOnly) {\n          closePicker();\n        }\n      });\n\n      addListener(document, 'mouseup', function (event) {\n        document.removeEventListener('mousemove', moveMarker);\n      });\n\n      addListener(document, 'touchend', function (event) {\n        document.removeEventListener('touchmove', moveMarker);\n      });\n\n      addListener(document, 'mousedown', function (event) {\n        keyboardNav = false;\n        picker.classList.remove('clr-keyboard-nav');\n        closePicker();\n      });\n\n      addListener(document, 'keydown', function (event) {\n        var key = event.key;\n        var target = event.target;\n        var shiftKey = event.shiftKey;\n        var navKeys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n        if (key === 'Escape') {\n          closePicker(true);\n\n          // Display focus rings when using the keyboard\n        } else if (navKeys.includes(key)) {\n          keyboardNav = true;\n          picker.classList.add('clr-keyboard-nav');\n        }\n\n        // Trap the focus within the color picker while it's open\n        if (key === 'Tab' && target.matches('.clr-picker *')) {\n          var focusables = getFocusableElements();\n          var firstFocusable = focusables.shift();\n          var lastFocusable = focusables.pop();\n\n          if (shiftKey && target === firstFocusable) {\n            lastFocusable.focus();\n            event.preventDefault();\n          } else if (!shiftKey && target === lastFocusable) {\n            firstFocusable.focus();\n            event.preventDefault();\n          }\n        }\n      });\n\n      addListener(document, 'click', '.clr-field button', function (event) {\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Open the color picker\n        event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n      });\n\n      addListener(colorMarker, 'keydown', function (event) {\n        var movements = {\n          ArrowUp: [0, -1],\n          ArrowDown: [0, 1],\n          ArrowLeft: [-1, 0],\n          ArrowRight: [1, 0]\n        };\n\n        if (Object.keys(movements).includes(event.key)) {\n          moveMarkerOnKeydown.apply(void 0, movements[event.key]);\n          event.preventDefault();\n        }\n      });\n\n      addListener(colorArea, 'click', moveMarker);\n      addListener(hueSlider, 'input', setHue);\n      addListener(alphaSlider, 'input', setAlpha);\n    }\n\n    /**\r\n     * Return a list of focusable elements within the color picker.\r\n     * @return {array} The list of focusable DOM elemnts.\r\n     */\n    function getFocusableElements() {\n      var controls = Array.from(picker.querySelectorAll('input, button'));\n      var focusables = controls.filter(function (node) {return !!node.offsetWidth;});\n\n      return focusables;\n    }\n\n    /**\r\n     * Shortcut for getElementById to optimize the minified JS.\r\n     * @param {string} id The element id.\r\n     * @return {object} The DOM element with the provided id.\r\n     */\n    function getEl(id) {\n      return document.getElementById(id);\n    }\n\n    /**\r\n     * Shortcut for addEventListener to optimize the minified JS.\r\n     * @param {object} context The context to which the listener is attached.\r\n     * @param {string} type Event type.\r\n     * @param {(string|function)} selector Event target if delegation is used, event handler if not.\r\n     * @param {function} [fn] Event handler if delegation is used.\r\n     */\n    function addListener(context, type, selector, fn) {\n      var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n      // Delegate event to the target of the selector\n      if (typeof selector === 'string') {\n        context.addEventListener(type, function (event) {\n          if (matches.call(event.target, selector)) {\n            fn.call(event.target, event);\n          }\n        });\n\n        // If the selector is not a string then it's a function\n        // in which case we need a regular event listener\n      } else {\n        fn = selector;\n        context.addEventListener(type, fn);\n      }\n    }\n\n    /**\r\n     * Call a function only when the DOM is ready.\r\n     * @param {function} fn The function to call.\r\n     * @param {array} [args] Arguments to pass to the function.\r\n     */\n    function DOMReady(fn, args) {\n      args = args !== undefined ? args : [];\n\n      if (document.readyState !== 'loading') {\n        fn.apply(void 0, args);\n      } else {\n        document.addEventListener('DOMContentLoaded', function () {\n          fn.apply(void 0, args);\n        });\n      }\n    }\n\n    // Polyfill for Nodelist.forEach\n    if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n      NodeList.prototype.forEach = Array.prototype.forEach;\n    }\n\n    //*****************************************************\n    //******* NPM: Custom code starts here ****************\n    //*****************************************************\n\n    /**\r\n     * Copy the active color to the linked input field and set the color.\r\n     * @param {string} [color] Color value to override the active color.\r\n     * @param {HTMLelement} [target] the element setting the color on\r\n     */\n    function setColor(color, target) {\n      currentEl = target;\n      oldColor = currentEl.value;\n      attachVirtualInstance(target);\n      currentFormat = getColorFormatFromStr(color);\n      updatePickerPosition();\n      setColorFromStr(color);\n      pickColor();\n      if (oldColor !== color) {\n        currentEl.dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n\n    // Expose the color picker to the global scope\n    var Coloris = function () {\n      var methods = {\n        init: init,\n        set: configure,\n        wrap: wrapFields,\n        close: closePicker,\n        setInstance: setVirtualInstance,\n        setColor: setColor,\n        removeInstance: removeVirtualInstance,\n        updatePosition: updatePickerPosition\n      };\n\n      function Coloris(options) {\n        DOMReady(function () {\n          if (options) {\n            if (typeof options === 'string') {\n              bindFields(options);\n            } else {\n              configure(options);\n            }\n          }\n        });\n      }var _loop3 = function _loop3(key)\n\n      {\n        Coloris[key] = function () {for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {args[_key2] = arguments[_key2];}\n          DOMReady(methods[key], args);\n        };\n      };for (var key in methods) {_loop3(key);}\n\n      // handle window resize events re-aligning the panel\n      DOMReady(function () {\n        window.addEventListener('resize', function (event) {Coloris.updatePosition();});\n        window.addEventListener('scroll', function (event) {Coloris.updatePosition();});\n      });\n\n      return Coloris;\n    }();\n\n    // Ensure init function is available not only as as a default import\n    Coloris.coloris = Coloris;\n\n    // Init the color picker when the DOM is ready\n    return Coloris;\n\n  }(window, document, Math);\n}();\n\nvar _coloris = Coloris.coloris;\nvar _init = Coloris.init;\nvar _set = Coloris.set;\nvar _wrap = Coloris.wrap;\nvar _close = Coloris.close;\nvar _setInstance = Coloris.setInstance;\nvar _removeInstance = Coloris.removeInstance;\nvar _updatePosition = Coloris.updatePosition;\nexport default Coloris;\nexport {\n  _coloris as coloris,\n  _close as close,\n  _init as init,\n  _set as set,\n  _wrap as wrap,\n  _setInstance as setInstance,\n  _removeInstance as removeInstance,\n  _updatePosition as updatePosition };"],
  "mappings": "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",
  "names": ["window", "document", "Math", "_loop", "_loop2", "option", "Coloris", "_loop3", "key"]
}
